horizonCols = [
  { headerName: 'Horizon', field: 'label', flex: 1 },
  {
    headerName: 'Weight',
    flex: 1,
    valueGetter: params => {
      // if this is the pinned bottom row, return our pre-computed total
      if (params.node.rowPinned) {
        return params.data.totalWeight;
      }
      // normal rows sum their children
      return (params.data.children as SegmentNode[])
        .reduce((sum, seg) => sum + seg.data.horizonWeight, 0);
    }
  }
];
segmentCols = [
  { headerName: 'Segment', field: 'label', flex: 1 },
  {
    headerName: 'Horizon Wt',
    flex: 1,
    valueGetter: params => {
      if (params.node.rowPinned) {
        return params.data.data.horizonWeight;
      }
      return params.data.data.horizonWeight;
    },
    editable: true,
    valueParser: p => Number(p.newValue)
  },
  {
    headerName: 'Segment Wt',
    flex: 1,
    valueGetter: params => {
      if (params.node.rowPinned) {
        return params.data.data.segmentWeight;
      }
      return params.data.data.segmentWeight;
    },
    editable: true,
    valueParser: p => Number(p.newValue)
  }
];

<!-- horizon panel -->
<ag-grid-angular
  class="ag-theme-alpine"
  [columnDefs]="horizonCols"
  [rowData]="getHorizonRowData(tg)"
  rowSelection="single"
  (firstDataRendered)="onHorizonFirstData($event)"
  [pinnedBottomRowData]="horizonPinned"
  style="width:100%; height:200px;">
</ag-grid-angular>

<!-- segment panel -->
<ag-grid-angular
  class="ag-theme-alpine"
  [columnDefs]="segmentCols"
  [rowData]="getSegmentRowData(tg)"
  editable="true"
  (firstDataRendered)="onSegmentFirstData($event)"
  [pinnedBottomRowData]="segmentPinned"
  style="width:100%; height:200px;">
</ag-grid-angular>

horizonPinned: any[] = [];
segmentPinned: any[] = [];

onHorizonFirstData(ev: FirstDataRenderedEvent) {
  const rows = this.getHorizonRowData(this.tenureGroup);
  // sum each rowâ€™s weight
  const total = rows.reduce((acc, r) => 
    acc + r.children.reduce((s, seg) => s + seg.data.horizonWeight, 0)
  , 0);

  // create a single pinned row with our total
  this.horizonPinned = [{ label: 'Total', totalWeight: total }];

  // and tell the grid about it (optional, since [pinnedBottomRowData] is bound)
  ev.api.setPinnedBottomRowData(this.horizonPinned);
}

onSegmentFirstData(ev: FirstDataRenderedEvent) {
  const segs = this.selectedHorizon?.children || [];
  const sumH = segs.reduce((s, seg) => s + seg.data.horizonWeight, 0);
  const sumS = segs.reduce((s, seg) => s + seg.data.segmentWeight, 0);

  // pinned row needs a `label` plus a `data` object matching your colDef valueGetters
  this.segmentPinned = [{
    label: 'Total',
    data: { horizonWeight: sumH, segmentWeight: sumS }
  }];

  ev.api.setPinnedBottomRowData(this.segmentPinned);
}
